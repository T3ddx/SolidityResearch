{
	"id": "fbd4cc03d1718f2410e178bb9378d13d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/double_account.sol": {
				"content": "pragma solidity ^ 0.5.13;\r\ncontract bank_m {\r\n    struct User{\r\n        address account;\r\n        uint256 balance;\r\n        bool valid;\r\n    }\r\n    \r\n    modifier hasAccount {\r\n        /*require(\r\n            accounts[msg.sender].valid,\r\n            \"You do not have a bank account\"\r\n        );\r\n        _;*/\r\n        if(accounts[msg.sender].valid){\r\n            _;\r\n        } else {\r\n            if(msg.value > 0){\r\n                msg.sender.transfer(msg.value/2);\r\n            }\r\n        }\r\n    }\r\n\r\n    modifier hasMoney(uint money) {\r\n        require(\r\n            accounts[msg.sender].balance >= money,\r\n            \"You do not have enough money\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    mapping(address => User) accounts;\r\n    User alice;\r\n    User bob;\r\n\r\n    constructor(address Alice, address Bob) public {\r\n        alice = User({account : Alice, balance : 0, valid : true});\r\n        bob = User({account : Bob, balance : 0, valid : true});\r\n\r\n        accounts[Alice] = alice;\r\n        accounts[Bob] = bob;\r\n    }\r\n    function deposit() public payable hasAccount {\r\n        accounts[msg.sender].balance += msg.value;\r\n    }\r\n    function withdraw(uint amount) public payable hasAccount hasMoney(amount) {\r\n        msg.sender.transfer(amount * 1000000000000000000);\r\n        accounts[msg.sender].balance -= amount;\r\n    }\r\n\r\n    function fallback() public payable hasAccount {\r\n        deposit();\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/double_account.sol": {
				"bank_m": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "Alice",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "Bob",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "fallback",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/double_account.sol\":27:1413  contract bank_m {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/double_account.sol\":765:1020  constructor(address Alice, address Bob) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/double_account.sol\":765:1020  constructor(address Alice, address Bob) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/double_account.sol\":765:1020  constructor(address Alice, address Bob) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/double_account.sol\":831:881  User({account : Alice, balance : 0, valid : true}) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/double_account.sol\":847:852  Alice */\n  dup4\n    /* \"contracts/double_account.sol\":831:881  User({account : Alice, balance : 0, valid : true}) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/double_account.sol\":864:865  0 */\n  0x00\n    /* \"contracts/double_account.sol\":831:881  User({account : Alice, balance : 0, valid : true}) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/double_account.sol\":875:879  true */\n  0x01\n    /* \"contracts/double_account.sol\":831:881  User({account : Alice, balance : 0, valid : true}) */\n  iszero\n  iszero\n  dup2\n  mstore\n  pop\n    /* \"contracts/double_account.sol\":823:828  alice */\n  0x01\n    /* \"contracts/double_account.sol\":823:881  alice = User({account : Alice, balance : 0, valid : true}) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap1\n  pop\n  pop\n    /* \"contracts/double_account.sol\":898:946  User({account : Bob, balance : 0, valid : true}) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/double_account.sol\":914:917  Bob */\n  dup3\n    /* \"contracts/double_account.sol\":898:946  User({account : Bob, balance : 0, valid : true}) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/double_account.sol\":929:930  0 */\n  0x00\n    /* \"contracts/double_account.sol\":898:946  User({account : Bob, balance : 0, valid : true}) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/double_account.sol\":940:944  true */\n  0x01\n    /* \"contracts/double_account.sol\":898:946  User({account : Bob, balance : 0, valid : true}) */\n  iszero\n  iszero\n  dup2\n  mstore\n  pop\n    /* \"contracts/double_account.sol\":892:895  bob */\n  0x04\n    /* \"contracts/double_account.sol\":892:946  bob = User({account : Bob, balance : 0, valid : true}) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap1\n  pop\n  pop\n    /* \"contracts/double_account.sol\":977:982  alice */\n  0x01\n    /* \"contracts/double_account.sol\":959:967  accounts */\n  0x00\n    /* \"contracts/double_account.sol\":959:974  accounts[Alice] */\n  dup1\n    /* \"contracts/double_account.sol\":968:973  Alice */\n  dup5\n    /* \"contracts/double_account.sol\":959:974  accounts[Alice] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/double_account.sol\":959:982  accounts[Alice] = alice */\n  0x00\n  dup3\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x01\n  dup3\n  add\n  sload\n  dup2\n  0x01\n  add\n  sstore\n  0x02\n  dup3\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n  dup2\n  0x02\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap1\n  pop\n  pop\n    /* \"contracts/double_account.sol\":1009:1012  bob */\n  0x04\n    /* \"contracts/double_account.sol\":993:1001  accounts */\n  0x00\n    /* \"contracts/double_account.sol\":993:1006  accounts[Bob] */\n  dup1\n    /* \"contracts/double_account.sol\":1002:1005  Bob */\n  dup4\n    /* \"contracts/double_account.sol\":993:1006  accounts[Bob] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/double_account.sol\":993:1012  accounts[Bob] = bob */\n  0x00\n  dup3\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x01\n  dup3\n  add\n  sload\n  dup2\n  0x01\n  add\n  sstore\n  0x02\n  dup3\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n  dup2\n  0x02\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap1\n  pop\n  pop\n    /* \"contracts/double_account.sol\":765:1020  constructor(address Alice, address Bob) public {\r... */\n  pop\n  pop\n    /* \"contracts/double_account.sol\":27:1413  contract bank_m {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/double_account.sol\":27:1413  contract bank_m {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x552079dc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/double_account.sol\":1137:1328  function withdraw(uint amount) public payable hasAccount hasMoney(amount) {\r... */\n    tag_2:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_6:\n        /* \"contracts/double_account.sol\":1137:1328  function withdraw(uint amount) public payable hasAccount hasMoney(amount) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/double_account.sol\":1336:1410  function fallback() public payable hasAccount {\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/double_account.sol\":1026:1131  function deposit() public payable hasAccount {\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/double_account.sol\":1137:1328  function withdraw(uint amount) public payable hasAccount hasMoney(amount) {\r... */\n    tag_7:\n        /* \"contracts/double_account.sol\":321:329  accounts */\n      0x00\n        /* \"contracts/double_account.sol\":321:341  accounts[msg.sender] */\n      dup1\n        /* \"contracts/double_account.sol\":330:340  msg.sender */\n      caller\n        /* \"contracts/double_account.sol\":321:341  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/double_account.sol\":321:347  accounts[msg.sender].valid */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/double_account.sol\":318:492  if(accounts[msg.sender].valid){\r... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contracts/double_account.sol\":1203:1209  amount */\n      dup1\n        /* \"contracts/double_account.sol\":602:607  money */\n      dup1\n        /* \"contracts/double_account.sol\":570:578  accounts */\n      0x00\n        /* \"contracts/double_account.sol\":570:590  accounts[msg.sender] */\n      dup1\n        /* \"contracts/double_account.sol\":579:589  msg.sender */\n      caller\n        /* \"contracts/double_account.sol\":570:590  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/double_account.sol\":570:598  accounts[msg.sender].balance */\n      0x01\n      add\n      sload\n        /* \"contracts/double_account.sol\":570:607  accounts[msg.sender].balance >= money */\n      lt\n      iszero\n        /* \"contracts/double_account.sol\":548:663  require(\r... */\n      tag_15\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x596f7520646f206e6f74206861766520656e6f756768206d6f6e657900000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_15:\n        /* \"contracts/double_account.sol\":1222:1232  msg.sender */\n      caller\n        /* \"contracts/double_account.sol\":1222:1241  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/double_account.sol\":1222:1271  msg.sender.transfer(amount * 1000000000000000000) */\n      0x08fc\n        /* \"contracts/double_account.sol\":1251:1270  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/double_account.sol\":1242:1248  amount */\n      dup5\n        /* \"contracts/double_account.sol\":1242:1270  amount * 1000000000000000000 */\n      mul\n        /* \"contracts/double_account.sol\":1222:1271  msg.sender.transfer(amount * 1000000000000000000) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_17:\n        /* \"contracts/double_account.sol\":1222:1271  msg.sender.transfer(amount * 1000000000000000000) */\n      pop\n        /* \"contracts/double_account.sol\":1314:1320  amount */\n      dup2\n        /* \"contracts/double_account.sol\":1282:1290  accounts */\n      0x00\n        /* \"contracts/double_account.sol\":1282:1302  accounts[msg.sender] */\n      dup1\n        /* \"contracts/double_account.sol\":1291:1301  msg.sender */\n      caller\n        /* \"contracts/double_account.sol\":1282:1302  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/double_account.sol\":1282:1310  accounts[msg.sender].balance */\n      0x01\n      add\n      0x00\n        /* \"contracts/double_account.sol\":1282:1320  accounts[msg.sender].balance -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/double_account.sol\":363:364  _ */\n      pop\n        /* \"contracts/double_account.sol\":318:492  if(accounts[msg.sender].valid){\r... */\n      jump(tag_18)\n    tag_13:\n        /* \"contracts/double_account.sol\":412:413  0 */\n      0x00\n        /* \"contracts/double_account.sol\":400:409  msg.value */\n      callvalue\n        /* \"contracts/double_account.sol\":400:413  msg.value > 0 */\n      gt\n        /* \"contracts/double_account.sol\":397:481  if(msg.value > 0){\r... */\n      iszero\n      tag_19\n      jumpi\n        /* \"contracts/double_account.sol\":433:443  msg.sender */\n      caller\n        /* \"contracts/double_account.sol\":433:452  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/double_account.sol\":433:465  msg.sender.transfer(msg.value/2) */\n      0x08fc\n        /* \"contracts/double_account.sol\":463:464  2 */\n      0x02\n        /* \"contracts/double_account.sol\":453:462  msg.value */\n      callvalue\n        /* \"contracts/double_account.sol\":453:464  msg.value/2 */\n      dup2\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n      div\n        /* \"contracts/double_account.sol\":433:465  msg.sender.transfer(msg.value/2) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"contracts/double_account.sol\":433:465  msg.sender.transfer(msg.value/2) */\n      pop\n        /* \"contracts/double_account.sol\":397:481  if(msg.value > 0){\r... */\n    tag_19:\n        /* \"contracts/double_account.sol\":318:492  if(accounts[msg.sender].valid){\r... */\n    tag_18:\n        /* \"contracts/double_account.sol\":1137:1328  function withdraw(uint amount) public payable hasAccount hasMoney(amount) {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/double_account.sol\":1336:1410  function fallback() public payable hasAccount {\r... */\n    tag_9:\n        /* \"contracts/double_account.sol\":321:329  accounts */\n      0x00\n        /* \"contracts/double_account.sol\":321:341  accounts[msg.sender] */\n      dup1\n        /* \"contracts/double_account.sol\":330:340  msg.sender */\n      caller\n        /* \"contracts/double_account.sol\":321:341  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/double_account.sol\":321:347  accounts[msg.sender].valid */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/double_account.sol\":318:492  if(accounts[msg.sender].valid){\r... */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/double_account.sol\":1393:1402  deposit() */\n      tag_25\n        /* \"contracts/double_account.sol\":1393:1400  deposit */\n      tag_11\n        /* \"contracts/double_account.sol\":1393:1402  deposit() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/double_account.sol\":318:492  if(accounts[msg.sender].valid){\r... */\n      jump(tag_26)\n    tag_23:\n        /* \"contracts/double_account.sol\":412:413  0 */\n      0x00\n        /* \"contracts/double_account.sol\":400:409  msg.value */\n      callvalue\n        /* \"contracts/double_account.sol\":400:413  msg.value > 0 */\n      gt\n        /* \"contracts/double_account.sol\":397:481  if(msg.value > 0){\r... */\n      iszero\n      tag_27\n      jumpi\n        /* \"contracts/double_account.sol\":433:443  msg.sender */\n      caller\n        /* \"contracts/double_account.sol\":433:452  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/double_account.sol\":433:465  msg.sender.transfer(msg.value/2) */\n      0x08fc\n        /* \"contracts/double_account.sol\":463:464  2 */\n      0x02\n        /* \"contracts/double_account.sol\":453:462  msg.value */\n      callvalue\n        /* \"contracts/double_account.sol\":453:464  msg.value/2 */\n      dup2\n      tag_28\n      jumpi\n      invalid\n    tag_28:\n      div\n        /* \"contracts/double_account.sol\":433:465  msg.sender.transfer(msg.value/2) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_29:\n        /* \"contracts/double_account.sol\":433:465  msg.sender.transfer(msg.value/2) */\n      pop\n        /* \"contracts/double_account.sol\":397:481  if(msg.value > 0){\r... */\n    tag_27:\n        /* \"contracts/double_account.sol\":318:492  if(accounts[msg.sender].valid){\r... */\n    tag_26:\n        /* \"contracts/double_account.sol\":1336:1410  function fallback() public payable hasAccount {\r... */\n      jump\t// out\n        /* \"contracts/double_account.sol\":1026:1131  function deposit() public payable hasAccount {\r... */\n    tag_11:\n        /* \"contracts/double_account.sol\":321:329  accounts */\n      0x00\n        /* \"contracts/double_account.sol\":321:341  accounts[msg.sender] */\n      dup1\n        /* \"contracts/double_account.sol\":330:340  msg.sender */\n      caller\n        /* \"contracts/double_account.sol\":321:341  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/double_account.sol\":321:347  accounts[msg.sender].valid */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/double_account.sol\":318:492  if(accounts[msg.sender].valid){\r... */\n      iszero\n      tag_31\n      jumpi\n        /* \"contracts/double_account.sol\":1114:1123  msg.value */\n      callvalue\n        /* \"contracts/double_account.sol\":1082:1090  accounts */\n      0x00\n        /* \"contracts/double_account.sol\":1082:1102  accounts[msg.sender] */\n      dup1\n        /* \"contracts/double_account.sol\":1091:1101  msg.sender */\n      caller\n        /* \"contracts/double_account.sol\":1082:1102  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/double_account.sol\":1082:1110  accounts[msg.sender].balance */\n      0x01\n      add\n      0x00\n        /* \"contracts/double_account.sol\":1082:1123  accounts[msg.sender].balance += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/double_account.sol\":318:492  if(accounts[msg.sender].valid){\r... */\n      jump(tag_33)\n    tag_31:\n        /* \"contracts/double_account.sol\":412:413  0 */\n      0x00\n        /* \"contracts/double_account.sol\":400:409  msg.value */\n      callvalue\n        /* \"contracts/double_account.sol\":400:413  msg.value > 0 */\n      gt\n        /* \"contracts/double_account.sol\":397:481  if(msg.value > 0){\r... */\n      iszero\n      tag_34\n      jumpi\n        /* \"contracts/double_account.sol\":433:443  msg.sender */\n      caller\n        /* \"contracts/double_account.sol\":433:452  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/double_account.sol\":433:465  msg.sender.transfer(msg.value/2) */\n      0x08fc\n        /* \"contracts/double_account.sol\":463:464  2 */\n      0x02\n        /* \"contracts/double_account.sol\":453:462  msg.value */\n      callvalue\n        /* \"contracts/double_account.sol\":453:464  msg.value/2 */\n      dup2\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n      div\n        /* \"contracts/double_account.sol\":433:465  msg.sender.transfer(msg.value/2) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"contracts/double_account.sol\":433:465  msg.sender.transfer(msg.value/2) */\n      pop\n        /* \"contracts/double_account.sol\":397:481  if(msg.value > 0){\r... */\n    tag_34:\n        /* \"contracts/double_account.sol\":318:492  if(accounts[msg.sender].valid){\r... */\n    tag_33:\n        /* \"contracts/double_account.sol\":1026:1131  function deposit() public payable hasAccount {\r... */\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582099e4b9d46671065bb67c338165f9c4bd170e1434c3645f82581a5195a74da05e64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516107fd3803806107fd8339818101604052604081101561003357600080fd5b81019080805190602001909291908051906020019092919050505060405180606001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160011515815250600160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555090505060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160011515815250600460008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555090505060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff02191690831515021790555090505060046000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff0219169083151502179055509050505050610486806103776000396000f3fe6080604052600436106100345760003560e01c80632e1a7d4d14610039578063552079dc14610067578063d0e30db014610071575b600080fd5b6100656004803603602081101561004f57600080fd5b810190808035906020019092919050505061007b565b005b61006f61028c565b005b61007961034b565b005b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff161561022d5780806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541015610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f596f7520646f206e6f74206861766520656e6f756768206d6f6e65790000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a764000084029081150290604051600060405180830381858888f193505050501580156101d7573d6000803e3d6000fd5b50816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555050610289565b6000341115610288573373ffffffffffffffffffffffffffffffffffffffff166108fc6002348161025a57fe5b049081150290604051600060405180830381858888f19350505050158015610286573d6000803e3d6000fd5b505b5b50565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156102ed576102e861034b565b610349565b6000341115610348573373ffffffffffffffffffffffffffffffffffffffff166108fc6002348161031a57fe5b049081150290604051600060405180830381858888f19350505050158015610346573d6000803e3d6000fd5b505b5b565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156103f357346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254019250508190555061044f565b600034111561044e573373ffffffffffffffffffffffffffffffffffffffff166108fc6002348161042057fe5b049081150290604051600060405180830381858888f1935050505015801561044c573d6000803e3d6000fd5b505b5b56fea265627a7a7231582099e4b9d46671065bb67c338165f9c4bd170e1434c3645f82581a5195a74da05e64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x7FD CODESIZE SUB DUP1 PUSH2 0x7FD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP PUSH2 0x486 DUP1 PUSH2 0x377 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x552079DC EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x71 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x28C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x34B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x22D JUMPI DUP1 DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x187 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520646F206E6F74206861766520656E6F756768206D6F6E657900000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 DUP5 MUL SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP PUSH2 0x289 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x288 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 CALLVALUE DUP2 PUSH2 0x25A JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x286 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2E8 PUSH2 0x34B JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x348 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 CALLVALUE DUP2 PUSH2 0x31A JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3F3 JUMPI CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x44F JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x44E JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 CALLVALUE DUP2 PUSH2 0x420 JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x44C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP10 0xE4 0xB9 0xD4 PUSH7 0x71065BB67C3381 PUSH6 0xF9C4BD170E14 CALLVALUE 0xC3 PUSH5 0x5F82581A51 SWAP6 0xA7 0x4D LOG0 0x5E PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "27:1386:0:-;;;765:255;8:9:-1;5:2;;;30:1;27;20:12;5:2;765:255:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;765:255:0;;;;;;;;;;;;;;;;;;;;;;;;;831:50;;;;;;;;847:5;831:50;;;;;;864:1;831:50;;;;875:4;831:50;;;;;823:5;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;898:48;;;;;;;;914:3;898:48;;;;;;929:1;898:48;;;;940:4;898:48;;;;;892:3;:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;977:5;959:8;:15;968:5;959:15;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1009:3;993:8;:13;1002:3;993:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;765:255;;27:1386;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c80632e1a7d4d14610039578063552079dc14610067578063d0e30db014610071575b600080fd5b6100656004803603602081101561004f57600080fd5b810190808035906020019092919050505061007b565b005b61006f61028c565b005b61007961034b565b005b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff161561022d5780806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541015610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f596f7520646f206e6f74206861766520656e6f756768206d6f6e65790000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a764000084029081150290604051600060405180830381858888f193505050501580156101d7573d6000803e3d6000fd5b50816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555050610289565b6000341115610288573373ffffffffffffffffffffffffffffffffffffffff166108fc6002348161025a57fe5b049081150290604051600060405180830381858888f19350505050158015610286573d6000803e3d6000fd5b505b5b50565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156102ed576102e861034b565b610349565b6000341115610348573373ffffffffffffffffffffffffffffffffffffffff166108fc6002348161031a57fe5b049081150290604051600060405180830381858888f19350505050158015610346573d6000803e3d6000fd5b505b5b565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156103f357346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254019250508190555061044f565b600034111561044e573373ffffffffffffffffffffffffffffffffffffffff166108fc6002348161042057fe5b049081150290604051600060405180830381858888f1935050505015801561044c573d6000803e3d6000fd5b505b5b56fea265627a7a7231582099e4b9d46671065bb67c338165f9c4bd170e1434c3645f82581a5195a74da05e64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x552079DC EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x71 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x28C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x34B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x22D JUMPI DUP1 DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x187 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520646F206E6F74206861766520656E6F756768206D6F6E657900000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 DUP5 MUL SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP PUSH2 0x289 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x288 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 CALLVALUE DUP2 PUSH2 0x25A JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x286 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2E8 PUSH2 0x34B JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x348 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 CALLVALUE DUP2 PUSH2 0x31A JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3F3 JUMPI CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x44F JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x44E JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 CALLVALUE DUP2 PUSH2 0x420 JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x44C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST JUMPDEST JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP10 0xE4 0xB9 0xD4 PUSH7 0x71065BB67C3381 PUSH6 0xF9C4BD170E14 CALLVALUE 0xC3 PUSH5 0x5F82581A51 SWAP6 0xA7 0x4D LOG0 0x5E PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "27:1386:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1137:191;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1137:191:0;;;;;;;;;;;;;;;;;:::i;:::-;;1336:74;;;:::i;:::-;;1026:105;;;:::i;:::-;;1137:191;321:8;:20;330:10;321:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;318:174;;;1203:6;602:5;570:8;:20;579:10;570:20;;;;;;;;;;;;;;;:28;;;:37;;548:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1222:10;:19;;:49;1251:19;1242:6;:28;1222:49;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1222:49:0;1314:6;1282:8;:20;1291:10;1282:20;;;;;;;;;;;;;;;:28;;;:38;;;;;;;;;;;363:1;318:174;;;412:1;400:9;:13;397:84;;;433:10;:19;;:32;463:1;453:9;:11;;;;;;433:32;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;433:32:0;397:84;318:174;1137:191;:::o;1336:74::-;321:8;:20;330:10;321:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;318:174;;;1393:9;:7;:9::i;:::-;318:174;;;412:1;400:9;:13;397:84;;;433:10;:19;;:32;463:1;453:9;:11;;;;;;433:32;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;433:32:0;397:84;318:174;1336:74::o;1026:105::-;321:8;:20;330:10;321:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;318:174;;;1114:9;1082:8;:20;1091:10;1082:20;;;;;;;;;;;;;;;:28;;;:41;;;;;;;;;;;318:174;;;412:1;400:9;:13;397:84;;;433:10;:19;;:32;463:1;453:9;:11;;;;;;433:32;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;433:32:0;397:84;318:174;1026:105::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "231600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deposit()": "infinite",
								"fallback()": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 1413,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 1413,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 1413,
									"name": "MSTORE"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "POP"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "MLOAD"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "PUSHSIZE"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "CODESIZE"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "SUB"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "DUP1"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "PUSHSIZE"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "DUP4"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "CODECOPY"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "DUP2"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "DUP2"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "ADD"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "DUP2"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "ADD"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "SWAP1"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "DUP1"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "DUP1"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "MLOAD"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "SWAP1"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "ADD"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "SWAP1"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "SWAP3"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "SWAP2"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "SWAP1"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "DUP1"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "MLOAD"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "SWAP1"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "ADD"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "SWAP1"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "SWAP3"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "SWAP2"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "SWAP1"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "POP"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "POP"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "POP"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "MLOAD"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "DUP1"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "ADD"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "MSTORE"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "DUP1"
								},
								{
									"begin": 847,
									"end": 852,
									"name": "DUP4"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "AND"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "DUP2"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "MSTORE"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "ADD"
								},
								{
									"begin": 864,
									"end": 865,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "DUP2"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "MSTORE"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "ADD"
								},
								{
									"begin": 875,
									"end": 879,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "ISZERO"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "ISZERO"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "DUP2"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "MSTORE"
								},
								{
									"begin": 831,
									"end": 881,
									"name": "POP"
								},
								{
									"begin": 823,
									"end": 828,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "DUP3"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "ADD"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "MLOAD"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "DUP2"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "ADD"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "EXP"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "DUP2"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "SLOAD"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "DUP2"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "MUL"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "NOT"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "AND"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "SWAP1"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "DUP4"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "AND"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "MUL"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "OR"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "SWAP1"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "SSTORE"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "POP"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "DUP3"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "ADD"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "MLOAD"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "DUP2"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "ADD"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "SSTORE"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "DUP3"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "ADD"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "MLOAD"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "DUP2"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "ADD"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "EXP"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "DUP2"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "SLOAD"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "DUP2"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "MUL"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "NOT"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "AND"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "SWAP1"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "DUP4"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "ISZERO"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "ISZERO"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "MUL"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "OR"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "SWAP1"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "SSTORE"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "POP"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "SWAP1"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "POP"
								},
								{
									"begin": 823,
									"end": 881,
									"name": "POP"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "MLOAD"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "DUP1"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "ADD"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "MSTORE"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "DUP1"
								},
								{
									"begin": 914,
									"end": 917,
									"name": "DUP3"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "AND"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "DUP2"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "MSTORE"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "ADD"
								},
								{
									"begin": 929,
									"end": 930,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "DUP2"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "MSTORE"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "ADD"
								},
								{
									"begin": 940,
									"end": 944,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "ISZERO"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "ISZERO"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "DUP2"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "MSTORE"
								},
								{
									"begin": 898,
									"end": 946,
									"name": "POP"
								},
								{
									"begin": 892,
									"end": 895,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "DUP3"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "ADD"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "MLOAD"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "DUP2"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "ADD"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "EXP"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "DUP2"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "SLOAD"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "DUP2"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "MUL"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "NOT"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "AND"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "SWAP1"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "DUP4"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "AND"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "MUL"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "OR"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "SWAP1"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "SSTORE"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "POP"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "DUP3"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "ADD"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "MLOAD"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "DUP2"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "ADD"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "SSTORE"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "DUP3"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "ADD"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "MLOAD"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "DUP2"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "ADD"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "EXP"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "DUP2"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "SLOAD"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "DUP2"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "MUL"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "NOT"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "AND"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "SWAP1"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "DUP4"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "ISZERO"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "ISZERO"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "MUL"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "OR"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "SWAP1"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "SSTORE"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "POP"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "SWAP1"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "POP"
								},
								{
									"begin": 892,
									"end": 946,
									"name": "POP"
								},
								{
									"begin": 977,
									"end": 982,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 959,
									"end": 967,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "DUP1"
								},
								{
									"begin": 968,
									"end": 973,
									"name": "DUP5"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "AND"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "AND"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "MSTORE"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "ADD"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "SWAP1"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "MSTORE"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "ADD"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "KECCAK256"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DUP3"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "ADD"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SLOAD"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "EXP"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DIV"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "AND"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "ADD"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "EXP"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SLOAD"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "MUL"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "NOT"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "AND"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DUP4"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "AND"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "MUL"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "OR"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SSTORE"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "POP"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DUP3"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "ADD"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SLOAD"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "ADD"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SSTORE"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DUP3"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "ADD"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SLOAD"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "EXP"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DIV"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "AND"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "ADD"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "EXP"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SLOAD"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "MUL"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "NOT"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "AND"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "DUP4"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "ISZERO"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "ISZERO"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "MUL"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "OR"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SSTORE"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "POP"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "POP"
								},
								{
									"begin": 959,
									"end": 982,
									"name": "POP"
								},
								{
									"begin": 1009,
									"end": 1012,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 993,
									"end": 1001,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "DUP1"
								},
								{
									"begin": 1002,
									"end": 1005,
									"name": "DUP4"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "AND"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "AND"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "DUP2"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "MSTORE"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "ADD"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "SWAP1"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "DUP2"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "MSTORE"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "ADD"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "KECCAK256"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DUP3"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "ADD"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SWAP1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SLOAD"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SWAP1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "EXP"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SWAP1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DIV"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "AND"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DUP2"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "ADD"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "EXP"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DUP2"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SLOAD"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DUP2"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "MUL"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "NOT"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "AND"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SWAP1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DUP4"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "AND"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "MUL"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "OR"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SWAP1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SSTORE"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "POP"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DUP3"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "ADD"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SLOAD"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DUP2"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "ADD"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SSTORE"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DUP3"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "ADD"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SWAP1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SLOAD"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SWAP1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "EXP"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SWAP1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DIV"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "AND"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DUP2"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "ADD"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "EXP"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DUP2"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SLOAD"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DUP2"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "MUL"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "NOT"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "AND"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SWAP1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "DUP4"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "ISZERO"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "ISZERO"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "MUL"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "OR"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SWAP1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SSTORE"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "POP"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "SWAP1"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "POP"
								},
								{
									"begin": 993,
									"end": 1012,
									"name": "POP"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "POP"
								},
								{
									"begin": 765,
									"end": 1020,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1413,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1413,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1413,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1413,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1413,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 1413,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1413,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582099e4b9d46671065bb67c338165f9c4bd170e1434c3645f82581a5195a74da05e64736f6c63430005110032",
									".code": [
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "SHR"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH",
											"value": "2E1A7D4D"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH",
											"value": "552079DC"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH",
											"value": "D0E30DB0"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1413,
											"name": "REVERT"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "JUMPDEST"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "DUP1"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "DUP2"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "ADD"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "SWAP1"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "DUP1"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "DUP1"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "SWAP1"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "ADD"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "SWAP1"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "SWAP3"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "SWAP2"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "SWAP1"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "POP"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "POP"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "POP"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "JUMPDEST"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "STOP"
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "JUMPDEST"
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "JUMPDEST"
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "STOP"
										},
										{
											"begin": 1026,
											"end": 1131,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1026,
											"end": 1131,
											"name": "JUMPDEST"
										},
										{
											"begin": 1026,
											"end": 1131,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1026,
											"end": 1131,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1026,
											"end": 1131,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1026,
											"end": 1131,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1026,
											"end": 1131,
											"name": "JUMPDEST"
										},
										{
											"begin": 1026,
											"end": 1131,
											"name": "STOP"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 330,
											"end": 340,
											"name": "CALLER"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "MSTORE"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "MSTORE"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "KECCAK256"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "ADD"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SLOAD"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "EXP"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "DIV"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "AND"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "ISZERO"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "JUMPI"
										},
										{
											"begin": 1203,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 602,
											"end": 607,
											"name": "DUP1"
										},
										{
											"begin": 570,
											"end": 578,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 589,
											"name": "CALLER"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "AND"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "AND"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "DUP2"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "MSTORE"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "ADD"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "SWAP1"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "DUP2"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "MSTORE"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "ADD"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 570,
											"end": 590,
											"name": "KECCAK256"
										},
										{
											"begin": 570,
											"end": 598,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 570,
											"end": 598,
											"name": "ADD"
										},
										{
											"begin": 570,
											"end": 598,
											"name": "SLOAD"
										},
										{
											"begin": 570,
											"end": 607,
											"name": "LT"
										},
										{
											"begin": 570,
											"end": 607,
											"name": "ISZERO"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "JUMPI"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "MLOAD"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "DUP2"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "MSTORE"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "ADD"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "DUP1"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "DUP1"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "ADD"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "DUP3"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "DUP2"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "SUB"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "DUP3"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "MSTORE"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "DUP2"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "MSTORE"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "ADD"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "DUP1"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "PUSH",
											"value": "596F7520646F206E6F74206861766520656E6F756768206D6F6E657900000000"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "DUP2"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "MSTORE"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "POP"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "ADD"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "SWAP2"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "POP"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "POP"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "MLOAD"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "DUP1"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "SWAP2"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "SUB"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "SWAP1"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "REVERT"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 548,
											"end": 663,
											"name": "JUMPDEST"
										},
										{
											"begin": 1222,
											"end": 1232,
											"name": "CALLER"
										},
										{
											"begin": 1222,
											"end": 1241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1241,
											"name": "AND"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1251,
											"end": 1270,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "DUP5"
										},
										{
											"begin": 1242,
											"end": 1270,
											"name": "MUL"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "DUP2"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "ISZERO"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "MUL"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "MLOAD"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "MLOAD"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "DUP1"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "DUP4"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "SUB"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "DUP2"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "DUP6"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "DUP9"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "DUP9"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "CALL"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "SWAP4"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1222,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1314,
											"end": 1320,
											"name": "DUP2"
										},
										{
											"begin": 1282,
											"end": 1290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "DUP1"
										},
										{
											"begin": 1291,
											"end": 1301,
											"name": "CALLER"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "AND"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "AND"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "MSTORE"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "MSTORE"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "KECCAK256"
										},
										{
											"begin": 1282,
											"end": 1310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1282,
											"end": 1310,
											"name": "ADD"
										},
										{
											"begin": 1282,
											"end": 1310,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1320,
											"name": "DUP3"
										},
										{
											"begin": 1282,
											"end": 1320,
											"name": "DUP3"
										},
										{
											"begin": 1282,
											"end": 1320,
											"name": "SLOAD"
										},
										{
											"begin": 1282,
											"end": 1320,
											"name": "SUB"
										},
										{
											"begin": 1282,
											"end": 1320,
											"name": "SWAP3"
										},
										{
											"begin": 1282,
											"end": 1320,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1320,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1320,
											"name": "DUP2"
										},
										{
											"begin": 1282,
											"end": 1320,
											"name": "SWAP1"
										},
										{
											"begin": 1282,
											"end": 1320,
											"name": "SSTORE"
										},
										{
											"begin": 1282,
											"end": 1320,
											"name": "POP"
										},
										{
											"begin": 363,
											"end": 364,
											"name": "POP"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 400,
											"end": 409,
											"name": "CALLVALUE"
										},
										{
											"begin": 400,
											"end": 413,
											"name": "GT"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "ISZERO"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "JUMPI"
										},
										{
											"begin": 433,
											"end": 443,
											"name": "CALLER"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "AND"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 463,
											"end": 464,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 453,
											"end": 462,
											"name": "CALLVALUE"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "DUP2"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "JUMPI"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "INVALID"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "JUMPDEST"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "DIV"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "SWAP1"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP2"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "ISZERO"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "MUL"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "SWAP1"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "MLOAD"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "MLOAD"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP1"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP4"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "SUB"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP2"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP6"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP9"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP9"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "CALL"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "SWAP4"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "POP"
										},
										{
											"begin": 1137,
											"end": 1328,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 330,
											"end": 340,
											"name": "CALLER"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "MSTORE"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "MSTORE"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "KECCAK256"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "ADD"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SLOAD"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "EXP"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "DIV"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "AND"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "ISZERO"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "JUMPI"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1393,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 400,
											"end": 409,
											"name": "CALLVALUE"
										},
										{
											"begin": 400,
											"end": 413,
											"name": "GT"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "ISZERO"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "JUMPI"
										},
										{
											"begin": 433,
											"end": 443,
											"name": "CALLER"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "AND"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 463,
											"end": 464,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 453,
											"end": 462,
											"name": "CALLVALUE"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "DUP2"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "JUMPI"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "INVALID"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "JUMPDEST"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "DIV"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "SWAP1"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP2"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "ISZERO"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "MUL"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "SWAP1"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "MLOAD"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "MLOAD"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP1"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP4"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "SUB"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP2"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP6"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP9"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP9"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "CALL"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "SWAP4"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1026,
											"end": 1131,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1026,
											"end": 1131,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "DUP1"
										},
										{
											"begin": 330,
											"end": 340,
											"name": "CALLER"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "AND"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "MSTORE"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "DUP2"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "MSTORE"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "ADD"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 321,
											"end": 341,
											"name": "KECCAK256"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "ADD"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SLOAD"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "EXP"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "DIV"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 321,
											"end": 347,
											"name": "AND"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "ISZERO"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "JUMPI"
										},
										{
											"begin": 1114,
											"end": 1123,
											"name": "CALLVALUE"
										},
										{
											"begin": 1082,
											"end": 1090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "DUP1"
										},
										{
											"begin": 1091,
											"end": 1101,
											"name": "CALLER"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "AND"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "AND"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "DUP2"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "MSTORE"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "ADD"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "SWAP1"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "DUP2"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "MSTORE"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "ADD"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1102,
											"name": "KECCAK256"
										},
										{
											"begin": 1082,
											"end": 1110,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1082,
											"end": 1110,
											"name": "ADD"
										},
										{
											"begin": 1082,
											"end": 1110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1123,
											"name": "DUP3"
										},
										{
											"begin": 1082,
											"end": 1123,
											"name": "DUP3"
										},
										{
											"begin": 1082,
											"end": 1123,
											"name": "SLOAD"
										},
										{
											"begin": 1082,
											"end": 1123,
											"name": "ADD"
										},
										{
											"begin": 1082,
											"end": 1123,
											"name": "SWAP3"
										},
										{
											"begin": 1082,
											"end": 1123,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1123,
											"name": "POP"
										},
										{
											"begin": 1082,
											"end": 1123,
											"name": "DUP2"
										},
										{
											"begin": 1082,
											"end": 1123,
											"name": "SWAP1"
										},
										{
											"begin": 1082,
											"end": 1123,
											"name": "SSTORE"
										},
										{
											"begin": 1082,
											"end": 1123,
											"name": "POP"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 400,
											"end": 409,
											"name": "CALLVALUE"
										},
										{
											"begin": 400,
											"end": 413,
											"name": "GT"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "ISZERO"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "JUMPI"
										},
										{
											"begin": 433,
											"end": 443,
											"name": "CALLER"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 433,
											"end": 452,
											"name": "AND"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 463,
											"end": 464,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 453,
											"end": 462,
											"name": "CALLVALUE"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "DUP2"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "JUMPI"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "INVALID"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "JUMPDEST"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "DIV"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "SWAP1"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP2"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "ISZERO"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "MUL"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "SWAP1"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "MLOAD"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "MLOAD"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP1"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP4"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "SUB"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP2"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP6"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP9"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "DUP9"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "CALL"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "SWAP4"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 433,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 397,
											"end": 481,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 318,
											"end": 492,
											"name": "JUMPDEST"
										},
										{
											"begin": 1026,
											"end": 1131,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"fallback()": "552079dc",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Alice\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Bob\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fallback\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/double_account.sol\":\"bank_m\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/double_account.sol\":{\"keccak256\":\"0xddb54d051cf9c055aea9332414e3d7ed0961301607b60e85bc1998f3cd8d224d\",\"urls\":[\"bzz-raw://f81df4c29172895c5d38ceb2ef3d668541b3b1c2adce8261b081c7ec1223edb0\",\"dweb:/ipfs/QmZy8ZVJjnymkTXaqKkq5gnyRxMNaXsxzf8jxg8EbykbD5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 58,
								"contract": "contracts/double_account.sol:bank_m",
								"label": "accounts",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(User)8_storage)"
							},
							{
								"astId": 60,
								"contract": "contracts/double_account.sol:bank_m",
								"label": "alice",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(User)8_storage"
							},
							{
								"astId": 62,
								"contract": "contracts/double_account.sol:bank_m",
								"label": "bob",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(User)8_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(User)8_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct bank_m.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)8_storage"
							},
							"t_struct(User)8_storage": {
								"encoding": "inplace",
								"label": "struct bank_m.User",
								"members": [
									{
										"astId": 3,
										"contract": "contracts/double_account.sol:bank_m",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 5,
										"contract": "contracts/double_account.sol:bank_m",
										"label": "balance",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 7,
										"contract": "contracts/double_account.sol:bank_m",
										"label": "valid",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/double_account.sol": {
				"ast": {
					"absolutePath": "contracts/double_account.sol",
					"exportedSymbols": {
						"bank_m": [
							152
						]
					},
					"id": 153,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "bank_m",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "bank_m.User",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "account",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "72:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "72:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "balance",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "98:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "98:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "valid",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "124:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 6,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "124:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "User",
									"nodeType": "StructDefinition",
									"scope": 152,
									"src": "50:92:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "174:325:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 10,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "321:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$8_storage_$",
																"typeString": "mapping(address => struct bank_m.User storage ref)"
															}
														},
														"id": 13,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 11,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "330:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "330:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "321:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$8_storage",
															"typeString": "struct bank_m.User storage ref"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "valid",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 7,
													"src": "321:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 34,
													"nodeType": "Block",
													"src": "382:110:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 17,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "400:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "400:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "412:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "400:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 33,
															"nodeType": "IfStatement",
															"src": "397:84:0",
															"trueBody": {
																"id": 32,
																"nodeType": "Block",
																"src": "414:67:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 29,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 26,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 167,
																							"src": "453:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 27,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "value",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "453:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "32",
																						"id": 28,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "463:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "453:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 21,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 167,
																						"src": "433:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 24,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "433:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 25,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "433:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 30,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "433:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 31,
																		"nodeType": "ExpressionStatement",
																		"src": "433:32:0"
																	}
																]
															}
														}
													]
												},
												"id": 35,
												"nodeType": "IfStatement",
												"src": "318:174:0",
												"trueBody": {
													"id": 16,
													"nodeType": "Block",
													"src": "348:28:0",
													"statements": [
														{
															"id": 15,
															"nodeType": "PlaceholderStatement",
															"src": "363:1:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 37,
									"name": "hasAccount",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:0:0"
									},
									"src": "154:345:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "537:146:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 42,
																		"name": "accounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "570:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$8_storage_$",
																			"typeString": "mapping(address => struct bank_m.User storage ref)"
																		}
																	},
																	"id": 45,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 43,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "579:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "579:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "570:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$8_storage",
																		"typeString": "struct bank_m.User storage ref"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "570:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 47,
																"name": "money",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "570:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f7520646f206e6f74206861766520656e6f756768206d6f6e6579",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "622:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9bc8586e764a6f146923b5087d6aff48f173bddad4e17bd92d9edf7e13cd9a91",
																"typeString": "literal_string \"You do not have enough money\""
															},
															"value": "You do not have enough money"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9bc8586e764a6f146923b5087d6aff48f173bddad4e17bd92d9edf7e13cd9a91",
																"typeString": "literal_string \"You do not have enough money\""
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															171
														],
														"referencedDeclaration": 171,
														"src": "548:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "548:115:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "548:115:0"
											},
											{
												"id": 52,
												"nodeType": "PlaceholderStatement",
												"src": "674:1:0"
											}
										]
									},
									"documentation": null,
									"id": 54,
									"name": "hasMoney",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"name": "money",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "525:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "525:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "524:12:0"
									},
									"src": "507:176:0",
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 58,
									"name": "accounts",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "691:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$8_storage_$",
										"typeString": "mapping(address => struct bank_m.User)"
									},
									"typeName": {
										"id": 57,
										"keyType": {
											"id": 55,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "699:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "691:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$8_storage_$",
											"typeString": "mapping(address => struct bank_m.User)"
										},
										"valueType": {
											"contractScope": null,
											"id": 56,
											"name": "User",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "710:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$8_storage_ptr",
												"typeString": "struct bank_m.User"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 60,
									"name": "alice",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "731:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_User_$8_storage",
										"typeString": "struct bank_m.User"
									},
									"typeName": {
										"contractScope": null,
										"id": 59,
										"name": "User",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 8,
										"src": "731:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_User_$8_storage_ptr",
											"typeString": "struct bank_m.User"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 62,
									"name": "bob",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "748:8:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_User_$8_storage",
										"typeString": "struct bank_m.User"
									},
									"typeName": {
										"contractScope": null,
										"id": 61,
										"name": "User",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 8,
										"src": "748:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_User_$8_storage_ptr",
											"typeString": "struct bank_m.User"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "812:208:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 69,
														"name": "alice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "823:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$8_storage",
															"typeString": "struct bank_m.User storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 71,
																"name": "Alice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "847:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "864:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "875:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 70,
															"name": "User",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "831:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_User_$8_storage_ptr_$",
																"typeString": "type(struct bank_m.User storage pointer)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"account",
															"balance",
															"valid"
														],
														"nodeType": "FunctionCall",
														"src": "831:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$8_memory",
															"typeString": "struct bank_m.User memory"
														}
													},
													"src": "823:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$8_storage",
														"typeString": "struct bank_m.User storage ref"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "823:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 77,
														"name": "bob",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "892:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$8_storage",
															"typeString": "struct bank_m.User storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 79,
																"name": "Bob",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "914:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "929:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "940:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 78,
															"name": "User",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "898:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_User_$8_storage_ptr_$",
																"typeString": "type(struct bank_m.User storage pointer)"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"account",
															"balance",
															"valid"
														],
														"nodeType": "FunctionCall",
														"src": "898:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$8_memory",
															"typeString": "struct bank_m.User memory"
														}
													},
													"src": "892:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$8_storage",
														"typeString": "struct bank_m.User storage ref"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "892:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 85,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "959:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$8_storage_$",
																"typeString": "mapping(address => struct bank_m.User storage ref)"
															}
														},
														"id": 87,
														"indexExpression": {
															"argumentTypes": null,
															"id": 86,
															"name": "Alice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "968:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "959:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$8_storage",
															"typeString": "struct bank_m.User storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 88,
														"name": "alice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "977:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$8_storage",
															"typeString": "struct bank_m.User storage ref"
														}
													},
													"src": "959:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$8_storage",
														"typeString": "struct bank_m.User storage ref"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "959:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 91,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "993:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$8_storage_$",
																"typeString": "mapping(address => struct bank_m.User storage ref)"
															}
														},
														"id": 93,
														"indexExpression": {
															"argumentTypes": null,
															"id": 92,
															"name": "Bob",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1002:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "993:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$8_storage",
															"typeString": "struct bank_m.User storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "bob",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "1009:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$8_storage",
															"typeString": "struct bank_m.User storage ref"
														}
													},
													"src": "993:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$8_storage",
														"typeString": "struct bank_m.User storage ref"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "993:19:0"
											}
										]
									},
									"documentation": null,
									"id": 98,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"name": "Alice",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "777:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "Bob",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "792:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "776:28:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:0:0"
									},
									"scope": 152,
									"src": "765:255:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1071:60:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 103,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "1082:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$8_storage_$",
																	"typeString": "mapping(address => struct bank_m.User storage ref)"
																}
															},
															"id": 106,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 104,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "1091:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1091:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1082:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$8_storage",
																"typeString": "struct bank_m.User storage ref"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1082:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 108,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1114:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1114:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1082:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1082:41:0"
											}
										]
									},
									"documentation": null,
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 101,
											"modifierName": {
												"argumentTypes": null,
												"id": 100,
												"name": "hasAccount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 37,
												"src": "1060:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1060:10:0"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1042:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1071:0:0"
									},
									"scope": 152,
									"src": "1026:105:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1211:117:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 128,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1242:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31303030303030303030303030303030303030",
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1251:19:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1000000000000000000"
															},
															"src": "1242:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "1222:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1222:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1222:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1222:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "1222:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 133,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "1282:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$8_storage_$",
																	"typeString": "mapping(address => struct bank_m.User storage ref)"
																}
															},
															"id": 136,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 134,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "1291:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1291:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1282:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$8_storage",
																"typeString": "struct bank_m.User storage ref"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1282:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 138,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1314:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1282:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "1282:38:0"
											}
										]
									},
									"documentation": null,
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 118,
											"modifierName": {
												"argumentTypes": null,
												"id": 117,
												"name": "hasAccount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 37,
												"src": "1183:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1183:10:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 120,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 115,
													"src": "1203:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 121,
											"modifierName": {
												"argumentTypes": null,
												"id": 119,
												"name": "hasMoney",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 54,
												"src": "1194:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1194:16:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1155:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1155:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1154:13:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1211:0:0"
									},
									"scope": 152,
									"src": "1137:191:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "1382:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 147,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "1393:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1393:9:0"
											}
										]
									},
									"documentation": null,
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 145,
											"modifierName": {
												"argumentTypes": null,
												"id": 144,
												"name": "hasAccount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 37,
												"src": "1371:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1371:10:0"
										}
									],
									"name": "fallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1353:2:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1382:0:0"
									},
									"scope": 152,
									"src": "1336:74:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 153,
							"src": "27:1386:0"
						}
					],
					"src": "0:1413:0"
				},
				"id": 0
			}
		}
	}
}