{
	"id": "b7b1382c48edcd7f9ca5654cc862abe8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.13",
	"solcLongVersion": "0.5.13+commit.5b0b510c",
	"input": {
		"language": "Solidity",
		"sources": {
			"double_account.sol": {
				"content": "pragma solidity ^ 0.5.13;\r\ncontract bank_m {\r\n    struct User{\r\n        address account;\r\n        uint balance;\r\n    }\r\n    \r\n    modifier hasAccount {\r\n        require(\r\n            msg.sender == alice.account || msg.sender == bob.account,\r\n            \"You do not have a bank account\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    mapping(address => User) accounts;\r\n    User alice;\r\n    User bob;\r\n\r\n    constructor(address Alice, address Bob) public {\r\n        alice.account = Alice;\r\n        alice.balance = 0;\r\n        bob.account = Bob;\r\n        bob.balance = 0;\r\n\r\n        accounts[Alice] = alice;\r\n        accounts[Bob] = bob;\r\n    }\r\n    function deposit() public payable hasAccount {\r\n        accounts[msg.sender].balance += msg.value;\r\n    }\r\n    function withdraw(uint amount) public payable hasAccount {\r\n        msg.sender.transfer(msg.value);\r\n        accounts[msg.sender].balance -= amount;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"double_account.sol": {
				"bank_m": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "Alice",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "Bob",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"double_account.sol\":27:909  contract bank_m {\r... */\n  mstore(0x40, 0x80)\n    /* \"double_account.sol\":399:634  constructor(address Alice, address Bob) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"double_account.sol\":399:634  constructor(address Alice, address Bob) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"double_account.sol\":399:634  constructor(address Alice, address Bob) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"double_account.sol\":473:478  Alice */\n  dup2\n    /* \"double_account.sol\":457:462  alice */\n  0x01\n    /* \"double_account.sol\":457:470  alice.account */\n  0x00\n  add\n  0x00\n    /* \"double_account.sol\":457:478  alice.account = Alice */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"double_account.sol\":505:506  0 */\n  0x00\n    /* \"double_account.sol\":489:494  alice */\n  0x01\n    /* \"double_account.sol\":489:502  alice.balance */\n  dup1\n  add\n    /* \"double_account.sol\":489:506  alice.balance = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"double_account.sol\":531:534  Bob */\n  dup1\n    /* \"double_account.sol\":517:520  bob */\n  0x03\n    /* \"double_account.sol\":517:528  bob.account */\n  0x00\n  add\n  0x00\n    /* \"double_account.sol\":517:534  bob.account = Bob */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"double_account.sol\":559:560  0 */\n  0x00\n    /* \"double_account.sol\":545:548  bob */\n  0x03\n    /* \"double_account.sol\":545:556  bob.balance */\n  0x01\n  add\n    /* \"double_account.sol\":545:560  bob.balance = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"double_account.sol\":591:596  alice */\n  0x01\n    /* \"double_account.sol\":573:581  accounts */\n  0x00\n    /* \"double_account.sol\":573:588  accounts[Alice] */\n  dup1\n    /* \"double_account.sol\":582:587  Alice */\n  dup5\n    /* \"double_account.sol\":573:588  accounts[Alice] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"double_account.sol\":573:596  accounts[Alice] = alice */\n  0x00\n  dup3\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x01\n  dup3\n  add\n  sload\n  dup2\n  0x01\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"double_account.sol\":623:626  bob */\n  0x03\n    /* \"double_account.sol\":607:615  accounts */\n  0x00\n    /* \"double_account.sol\":607:620  accounts[Bob] */\n  dup1\n    /* \"double_account.sol\":616:619  Bob */\n  dup4\n    /* \"double_account.sol\":607:620  accounts[Bob] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"double_account.sol\":607:626  accounts[Bob] = bob */\n  0x00\n  dup3\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x01\n  dup3\n  add\n  sload\n  dup2\n  0x01\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"double_account.sol\":399:634  constructor(address Alice, address Bob) public {\r... */\n  pop\n  pop\n    /* \"double_account.sol\":27:909  contract bank_m {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"double_account.sol\":27:909  contract bank_m {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"double_account.sol\":751:906  function withdraw(uint amount) public payable hasAccount {\r... */\n    tag_2:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n        /* \"double_account.sol\":751:906  function withdraw(uint amount) public payable hasAccount {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_6\n      jump\t// in\n    tag_4:\n      stop\n        /* \"double_account.sol\":640:745  function deposit() public payable hasAccount {\r... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"double_account.sol\":751:906  function withdraw(uint amount) public payable hasAccount {\r... */\n    tag_6:\n        /* \"double_account.sol\":197:202  alice */\n      0x01\n        /* \"double_account.sol\":197:210  alice.account */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"double_account.sol\":183:210  msg.sender == alice.account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"double_account.sol\":183:193  msg.sender */\n      caller\n        /* \"double_account.sol\":183:210  msg.sender == alice.account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"double_account.sol\":183:239  msg.sender == alice.account || msg.sender == bob.account */\n      dup1\n      tag_10\n      jumpi\n      pop\n        /* \"double_account.sol\":228:231  bob */\n      0x03\n        /* \"double_account.sol\":228:239  bob.account */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"double_account.sol\":214:239  msg.sender == bob.account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"double_account.sol\":214:224  msg.sender */\n      caller\n        /* \"double_account.sol\":214:239  msg.sender == bob.account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"double_account.sol\":183:239  msg.sender == alice.account || msg.sender == bob.account */\n    tag_10:\n        /* \"double_account.sol\":161:297  require(\r... */\n      tag_11\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x596f7520646f206e6f74206861766520612062616e6b206163636f756e740000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_11:\n        /* \"double_account.sol\":819:829  msg.sender */\n      caller\n        /* \"double_account.sol\":819:838  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"double_account.sol\":819:849  msg.sender.transfer(msg.value) */\n      0x08fc\n        /* \"double_account.sol\":839:848  msg.value */\n      callvalue\n        /* \"double_account.sol\":819:849  msg.sender.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"double_account.sol\":819:849  msg.sender.transfer(msg.value) */\n      pop\n        /* \"double_account.sol\":892:898  amount */\n      dup1\n        /* \"double_account.sol\":860:868  accounts */\n      0x00\n        /* \"double_account.sol\":860:880  accounts[msg.sender] */\n      dup1\n        /* \"double_account.sol\":869:879  msg.sender */\n      caller\n        /* \"double_account.sol\":860:880  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"double_account.sol\":860:888  accounts[msg.sender].balance */\n      0x01\n      add\n      0x00\n        /* \"double_account.sol\":860:898  accounts[msg.sender].balance -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"double_account.sol\":751:906  function withdraw(uint amount) public payable hasAccount {\r... */\n      pop\n      jump\t// out\n        /* \"double_account.sol\":640:745  function deposit() public payable hasAccount {\r... */\n    tag_8:\n        /* \"double_account.sol\":197:202  alice */\n      0x01\n        /* \"double_account.sol\":197:210  alice.account */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"double_account.sol\":183:210  msg.sender == alice.account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"double_account.sol\":183:193  msg.sender */\n      caller\n        /* \"double_account.sol\":183:210  msg.sender == alice.account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"double_account.sol\":183:239  msg.sender == alice.account || msg.sender == bob.account */\n      dup1\n      tag_15\n      jumpi\n      pop\n        /* \"double_account.sol\":228:231  bob */\n      0x03\n        /* \"double_account.sol\":228:239  bob.account */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"double_account.sol\":214:239  msg.sender == bob.account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"double_account.sol\":214:224  msg.sender */\n      caller\n        /* \"double_account.sol\":214:239  msg.sender == bob.account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"double_account.sol\":183:239  msg.sender == alice.account || msg.sender == bob.account */\n    tag_15:\n        /* \"double_account.sol\":161:297  require(\r... */\n      tag_16\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x596f7520646f206e6f74206861766520612062616e6b206163636f756e740000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_16:\n        /* \"double_account.sol\":728:737  msg.value */\n      callvalue\n        /* \"double_account.sol\":696:704  accounts */\n      0x00\n        /* \"double_account.sol\":696:716  accounts[msg.sender] */\n      dup1\n        /* \"double_account.sol\":705:715  msg.sender */\n      caller\n        /* \"double_account.sol\":696:716  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"double_account.sol\":696:724  accounts[msg.sender].balance */\n      0x01\n      add\n      0x00\n        /* \"double_account.sol\":696:737  accounts[msg.sender].balance += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"double_account.sol\":640:745  function deposit() public payable hasAccount {\r... */\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820415cb232cc98fb7769b788e1124b4580b631b8cd382afa21244d022bada8f68364736f6c634300050d0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161062b38038061062b8339818101604052604081101561003357600080fd5b81019080805190602001909291908051906020019092919050505081600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600180018190555080600360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060036001018190555060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015590505060036000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015590505050506103c7806102646000396000f3fe6080604052600436106100295760003560e01c80632e1a7d4d1461002e578063d0e30db01461005c575b600080fd5b61005a6004803603602081101561004457600080fd5b8101908080359060200190929190505050610066565b005b610064610220565b005b600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806101155750600360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f596f7520646f206e6f74206861766520612062616e6b206163636f756e74000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156101cd573d6000803e3d6000fd5b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555050565b600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102cf5750600360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f596f7520646f206e6f74206861766520612062616e6b206163636f756e74000081525060200191505060405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254019250508190555056fea265627a7a72315820415cb232cc98fb7769b788e1124b4580b631b8cd382afa21244d022bada8f68364736f6c634300050d0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x62B CODESIZE SUB DUP1 PUSH2 0x62B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x3 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP PUSH2 0x3C7 DUP1 PUSH2 0x264 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x5C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x220 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x115 JUMPI POP PUSH1 0x3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x187 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520646F206E6F74206861766520612062616E6B206163636F756E740000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2CF JUMPI POP PUSH1 0x3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520646F206E6F74206861766520612062616E6B206163636F756E740000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 COINBASE 0x5C 0xB2 ORIGIN 0xCC SWAP9 0xFB PUSH24 0x69B788E1124B4580B631B8CD382AFA21244D022BADA8F683 PUSH5 0x736F6C6343 STOP SDIV 0xD STOP ORIGIN ",
							"sourceMap": "27:882:0:-;;;399:235;8:9:-1;5:2;;;30:1;27;20:12;5:2;399:235:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;399:235:0;;;;;;;;;;;;;;;;;;;;;;;;;473:5;457;:13;;;:21;;;;;;;;;;;;;;;;;;505:1;489:5;:13;;:17;;;;531:3;517;:11;;;:17;;;;;;;;;;;;;;;;;;559:1;545:3;:11;;:15;;;;591:5;573:8;:15;582:5;573:15;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;623:3;607:8;:13;616:3;607:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;399:235;;27:882;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80632e1a7d4d1461002e578063d0e30db01461005c575b600080fd5b61005a6004803603602081101561004457600080fd5b8101908080359060200190929190505050610066565b005b610064610220565b005b600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806101155750600360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f596f7520646f206e6f74206861766520612062616e6b206163636f756e74000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156101cd573d6000803e3d6000fd5b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555050565b600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102cf5750600360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f596f7520646f206e6f74206861766520612062616e6b206163636f756e74000081525060200191505060405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254019250508190555056fea265627a7a72315820415cb232cc98fb7769b788e1124b4580b631b8cd382afa21244d022bada8f68364736f6c634300050d0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x5C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x220 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x115 JUMPI POP PUSH1 0x3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x187 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520646F206E6F74206861766520612062616E6B206163636F756E740000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2CF JUMPI POP PUSH1 0x3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520646F206E6F74206861766520612062616E6B206163636F756E740000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 COINBASE 0x5C 0xB2 ORIGIN 0xCC SWAP9 0xFB PUSH24 0x69B788E1124B4580B631B8CD382AFA21244D022BADA8F683 PUSH5 0x736F6C6343 STOP SDIV 0xD STOP ORIGIN ",
							"sourceMap": "27:882:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;751:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;751:155:0;;;;;;;;;;;;;;;;;:::i;:::-;;640:105;;;:::i;:::-;;751:155;197:5;:13;;;;;;;;;;;;183:27;;:10;:27;;;:56;;;;228:3;:11;;;;;;;;;;;;214:25;;:10;:25;;;183:56;161:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;819:10;:19;;:30;839:9;819:30;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;819:30:0;892:6;860:8;:20;869:10;860:20;;;;;;;;;;;;;;;:28;;;:38;;;;;;;;;;;751:155;:::o;640:105::-;197:5;:13;;;;;;;;;;;;183:27;;:10;:27;;;:56;;;;228:3;:11;;;;;;;;;;;;214:25;;:10;:25;;;183:56;161:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;728:9;696:8;:20;705:10;696:20;;;;;;;;;;;;;;;:28;;;:41;;;;;;;;;;;640:105::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "193400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deposit()": "21004",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 909,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 909,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 909,
									"name": "MSTORE"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "POP"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "MLOAD"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "PUSHSIZE"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "CODESIZE"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "SUB"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "DUP1"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "PUSHSIZE"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "DUP4"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "CODECOPY"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "DUP2"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "DUP2"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "ADD"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "DUP2"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "ADD"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "SWAP1"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "DUP1"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "DUP1"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "MLOAD"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "SWAP1"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "ADD"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "SWAP1"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "SWAP3"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "SWAP2"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "SWAP1"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "DUP1"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "MLOAD"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "SWAP1"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "ADD"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "SWAP1"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "SWAP3"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "SWAP2"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "SWAP1"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "POP"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "POP"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "POP"
								},
								{
									"begin": 473,
									"end": 478,
									"name": "DUP2"
								},
								{
									"begin": 457,
									"end": 462,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 457,
									"end": 470,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 457,
									"end": 470,
									"name": "ADD"
								},
								{
									"begin": 457,
									"end": 470,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "EXP"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "DUP2"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "SLOAD"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "DUP2"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "MUL"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "NOT"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "AND"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "SWAP1"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "DUP4"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "AND"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "MUL"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "OR"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "SWAP1"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "SSTORE"
								},
								{
									"begin": 457,
									"end": 478,
									"name": "POP"
								},
								{
									"begin": 505,
									"end": 506,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 489,
									"end": 494,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 489,
									"end": 502,
									"name": "DUP1"
								},
								{
									"begin": 489,
									"end": 502,
									"name": "ADD"
								},
								{
									"begin": 489,
									"end": 506,
									"name": "DUP2"
								},
								{
									"begin": 489,
									"end": 506,
									"name": "SWAP1"
								},
								{
									"begin": 489,
									"end": 506,
									"name": "SSTORE"
								},
								{
									"begin": 489,
									"end": 506,
									"name": "POP"
								},
								{
									"begin": 531,
									"end": 534,
									"name": "DUP1"
								},
								{
									"begin": 517,
									"end": 520,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 517,
									"end": 528,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 517,
									"end": 528,
									"name": "ADD"
								},
								{
									"begin": 517,
									"end": 528,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "EXP"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "DUP2"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "SLOAD"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "DUP2"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "MUL"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "NOT"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "AND"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "SWAP1"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "DUP4"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "AND"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "MUL"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "OR"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "SWAP1"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "SSTORE"
								},
								{
									"begin": 517,
									"end": 534,
									"name": "POP"
								},
								{
									"begin": 559,
									"end": 560,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 545,
									"end": 548,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 545,
									"end": 556,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 545,
									"end": 556,
									"name": "ADD"
								},
								{
									"begin": 545,
									"end": 560,
									"name": "DUP2"
								},
								{
									"begin": 545,
									"end": 560,
									"name": "SWAP1"
								},
								{
									"begin": 545,
									"end": 560,
									"name": "SSTORE"
								},
								{
									"begin": 545,
									"end": 560,
									"name": "POP"
								},
								{
									"begin": 591,
									"end": 596,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 573,
									"end": 581,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "DUP1"
								},
								{
									"begin": 582,
									"end": 587,
									"name": "DUP5"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "AND"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "AND"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "DUP2"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "MSTORE"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "ADD"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "SWAP1"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "DUP2"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "MSTORE"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "ADD"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 573,
									"end": 588,
									"name": "KECCAK256"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "DUP3"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "ADD"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "SWAP1"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "SLOAD"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "SWAP1"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "EXP"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "SWAP1"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "DIV"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "AND"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "DUP2"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "ADD"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "EXP"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "DUP2"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "SLOAD"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "DUP2"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "MUL"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "NOT"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "AND"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "SWAP1"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "DUP4"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "AND"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "MUL"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "OR"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "SWAP1"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "SSTORE"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "POP"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "DUP3"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "ADD"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "SLOAD"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "DUP2"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "ADD"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "SSTORE"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "SWAP1"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "POP"
								},
								{
									"begin": 573,
									"end": 596,
									"name": "POP"
								},
								{
									"begin": 623,
									"end": 626,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 607,
									"end": 615,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "DUP1"
								},
								{
									"begin": 616,
									"end": 619,
									"name": "DUP4"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "AND"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "AND"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "DUP2"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "MSTORE"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "ADD"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "SWAP1"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "DUP2"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "MSTORE"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "ADD"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 607,
									"end": 620,
									"name": "KECCAK256"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "DUP3"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "ADD"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "SWAP1"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "SLOAD"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "SWAP1"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "EXP"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "SWAP1"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "DIV"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "AND"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "DUP2"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "ADD"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "EXP"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "DUP2"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "SLOAD"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "DUP2"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "MUL"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "NOT"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "AND"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "SWAP1"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "DUP4"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "AND"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "MUL"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "OR"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "SWAP1"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "SSTORE"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "POP"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "DUP3"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "ADD"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "SLOAD"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "DUP2"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "ADD"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "SSTORE"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "SWAP1"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "POP"
								},
								{
									"begin": 607,
									"end": 626,
									"name": "POP"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "POP"
								},
								{
									"begin": 399,
									"end": 634,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 909,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 909,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 909,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 909,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 909,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 909,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 909,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820415cb232cc98fb7769b788e1124b4580b631b8cd382afa21244d022bada8f68364736f6c634300050d0032",
									".code": [
										{
											"begin": 27,
											"end": 909,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "SHR"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "PUSH",
											"value": "2E1A7D4D"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "PUSH",
											"value": "D0E30DB0"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 909,
											"name": "REVERT"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "JUMPDEST"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "DUP1"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "ADD"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "SWAP1"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "DUP1"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "DUP1"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "SWAP1"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "ADD"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "SWAP1"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "SWAP3"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "SWAP2"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "SWAP1"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "JUMPDEST"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "STOP"
										},
										{
											"begin": 640,
											"end": 745,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 640,
											"end": 745,
											"name": "JUMPDEST"
										},
										{
											"begin": 640,
											"end": 745,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 640,
											"end": 745,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 640,
											"end": 745,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 640,
											"end": 745,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 640,
											"end": 745,
											"name": "JUMPDEST"
										},
										{
											"begin": 640,
											"end": 745,
											"name": "STOP"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "JUMPDEST"
										},
										{
											"begin": 197,
											"end": 202,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "ADD"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "SLOAD"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "EXP"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "DIV"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "AND"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "AND"
										},
										{
											"begin": 183,
											"end": 193,
											"name": "CALLER"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "AND"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "EQ"
										},
										{
											"begin": 183,
											"end": 239,
											"name": "DUP1"
										},
										{
											"begin": 183,
											"end": 239,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 183,
											"end": 239,
											"name": "JUMPI"
										},
										{
											"begin": 183,
											"end": 239,
											"name": "POP"
										},
										{
											"begin": 228,
											"end": 231,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "ADD"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "SWAP1"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "SLOAD"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "SWAP1"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "EXP"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "SWAP1"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "DIV"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 239,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 239,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 224,
											"name": "CALLER"
										},
										{
											"begin": 214,
											"end": 239,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 239,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 239,
											"name": "EQ"
										},
										{
											"begin": 183,
											"end": 239,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 183,
											"end": 239,
											"name": "JUMPDEST"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "JUMPI"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "MLOAD"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP2"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "MSTORE"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "ADD"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "ADD"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP3"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP2"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "SUB"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP3"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "MSTORE"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP2"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "MSTORE"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "ADD"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "596F7520646F206E6F74206861766520612062616E6B206163636F756E740000"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP2"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "MSTORE"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "ADD"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "SWAP2"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "MLOAD"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "SWAP2"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "SUB"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "SWAP1"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "REVERT"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "JUMPDEST"
										},
										{
											"begin": 819,
											"end": 829,
											"name": "CALLER"
										},
										{
											"begin": 819,
											"end": 838,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 838,
											"name": "AND"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 839,
											"end": 848,
											"name": "CALLVALUE"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "ISZERO"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP4"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SUB"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP6"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP9"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP9"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "CALL"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SWAP4"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 892,
											"end": 898,
											"name": "DUP1"
										},
										{
											"begin": 860,
											"end": 868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "DUP1"
										},
										{
											"begin": 869,
											"end": 879,
											"name": "CALLER"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "AND"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "AND"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "DUP2"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "MSTORE"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "DUP2"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "MSTORE"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 860,
											"end": 880,
											"name": "KECCAK256"
										},
										{
											"begin": 860,
											"end": 888,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 860,
											"end": 888,
											"name": "ADD"
										},
										{
											"begin": 860,
											"end": 888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 860,
											"end": 898,
											"name": "DUP3"
										},
										{
											"begin": 860,
											"end": 898,
											"name": "DUP3"
										},
										{
											"begin": 860,
											"end": 898,
											"name": "SLOAD"
										},
										{
											"begin": 860,
											"end": 898,
											"name": "SUB"
										},
										{
											"begin": 860,
											"end": 898,
											"name": "SWAP3"
										},
										{
											"begin": 860,
											"end": 898,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 898,
											"name": "POP"
										},
										{
											"begin": 860,
											"end": 898,
											"name": "DUP2"
										},
										{
											"begin": 860,
											"end": 898,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 898,
											"name": "SSTORE"
										},
										{
											"begin": 860,
											"end": 898,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 906,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 745,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 640,
											"end": 745,
											"name": "JUMPDEST"
										},
										{
											"begin": 197,
											"end": 202,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "ADD"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "SLOAD"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "EXP"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "SWAP1"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "DIV"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 197,
											"end": 210,
											"name": "AND"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "AND"
										},
										{
											"begin": 183,
											"end": 193,
											"name": "CALLER"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "AND"
										},
										{
											"begin": 183,
											"end": 210,
											"name": "EQ"
										},
										{
											"begin": 183,
											"end": 239,
											"name": "DUP1"
										},
										{
											"begin": 183,
											"end": 239,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 183,
											"end": 239,
											"name": "JUMPI"
										},
										{
											"begin": 183,
											"end": 239,
											"name": "POP"
										},
										{
											"begin": 228,
											"end": 231,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "ADD"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "SWAP1"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "SLOAD"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "SWAP1"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "EXP"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "SWAP1"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "DIV"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 228,
											"end": 239,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 239,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 239,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 224,
											"name": "CALLER"
										},
										{
											"begin": 214,
											"end": 239,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 239,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 239,
											"name": "EQ"
										},
										{
											"begin": 183,
											"end": 239,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 183,
											"end": 239,
											"name": "JUMPDEST"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "JUMPI"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "MLOAD"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP2"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "MSTORE"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "ADD"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "ADD"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP3"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP2"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "SUB"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP3"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "MSTORE"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP2"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "MSTORE"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "ADD"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "596F7520646F206E6F74206861766520612062616E6B206163636F756E740000"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP2"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "MSTORE"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "ADD"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "SWAP2"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "MLOAD"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "SWAP2"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "SUB"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "SWAP1"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "REVERT"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 161,
											"end": 297,
											"name": "JUMPDEST"
										},
										{
											"begin": 728,
											"end": 737,
											"name": "CALLVALUE"
										},
										{
											"begin": 696,
											"end": 704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "DUP1"
										},
										{
											"begin": 705,
											"end": 715,
											"name": "CALLER"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "AND"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "AND"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "DUP2"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "MSTORE"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "ADD"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "SWAP1"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "DUP2"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "MSTORE"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "ADD"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 696,
											"end": 716,
											"name": "KECCAK256"
										},
										{
											"begin": 696,
											"end": 724,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 696,
											"end": 724,
											"name": "ADD"
										},
										{
											"begin": 696,
											"end": 724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 696,
											"end": 737,
											"name": "DUP3"
										},
										{
											"begin": 696,
											"end": 737,
											"name": "DUP3"
										},
										{
											"begin": 696,
											"end": 737,
											"name": "SLOAD"
										},
										{
											"begin": 696,
											"end": 737,
											"name": "ADD"
										},
										{
											"begin": 696,
											"end": 737,
											"name": "SWAP3"
										},
										{
											"begin": 696,
											"end": 737,
											"name": "POP"
										},
										{
											"begin": 696,
											"end": 737,
											"name": "POP"
										},
										{
											"begin": 696,
											"end": 737,
											"name": "DUP2"
										},
										{
											"begin": 696,
											"end": 737,
											"name": "SWAP1"
										},
										{
											"begin": 696,
											"end": 737,
											"name": "SSTORE"
										},
										{
											"begin": 696,
											"end": 737,
											"name": "POP"
										},
										{
											"begin": 640,
											"end": 745,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Alice\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Bob\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"double_account.sol\":\"bank_m\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"double_account.sol\":{\"keccak256\":\"0x929a417ffd4e840760a7270dedbfdacd7ad2917391678bb8db881cbaabb5c12f\",\"urls\":[\"bzz-raw://2ff35bc3df164a170fe7e6621453f97c0318d2cde679ff6f028fb5333e9158ac\",\"dweb:/ipfs/QmNk48yjLJx5JpYCSAQbFJhLCpnu4zfqwpSRBoEA4EcjpE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 29,
								"contract": "double_account.sol:bank_m",
								"label": "accounts",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(User)6_storage)"
							},
							{
								"astId": 31,
								"contract": "double_account.sol:bank_m",
								"label": "alice",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(User)6_storage"
							},
							{
								"astId": 33,
								"contract": "double_account.sol:bank_m",
								"label": "bob",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(User)6_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(User)6_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct bank_m.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)6_storage"
							},
							"t_struct(User)6_storage": {
								"encoding": "inplace",
								"label": "struct bank_m.User",
								"members": [
									{
										"astId": 3,
										"contract": "double_account.sol:bank_m",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 5,
										"contract": "double_account.sol:bank_m",
										"label": "balance",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"double_account.sol": {
				"ast": {
					"absolutePath": "double_account.sol",
					"exportedSymbols": {
						"bank_m": [
							118
						]
					},
					"id": 119,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 118,
							"linearizedBaseContracts": [
								118
							],
							"name": "bank_m",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "bank_m.User",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "account",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "72:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "72:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "balance",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "98:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "98:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "User",
									"nodeType": "StructDefinition",
									"scope": 118,
									"src": "50:68:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "150:167:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 9,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 133,
																		"src": "183:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 10,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "183:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 11,
																		"name": "alice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 31,
																		"src": "197:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$6_storage",
																			"typeString": "struct bank_m.User storage ref"
																		}
																	},
																	"id": 12,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "account",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "197:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "183:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 14,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 133,
																		"src": "214:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "214:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 16,
																		"name": "bob",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "228:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$6_storage",
																			"typeString": "struct bank_m.User storage ref"
																		}
																	},
																	"id": 17,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "account",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "228:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "214:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "183:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f7520646f206e6f74206861766520612062616e6b206163636f756e74",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "254:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a424fa8288ff8cd608afa6a7d8d47faa1be606e41bfc2781bb02afe011153f7e",
																"typeString": "literal_string \"You do not have a bank account\""
															},
															"value": "You do not have a bank account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a424fa8288ff8cd608afa6a7d8d47faa1be606e41bfc2781bb02afe011153f7e",
																"typeString": "literal_string \"You do not have a bank account\""
															}
														],
														"id": 8,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															136,
															137
														],
														"referencedDeclaration": 137,
														"src": "161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "161:136:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "161:136:0"
											},
											{
												"id": 23,
												"nodeType": "PlaceholderStatement",
												"src": "308:1:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"name": "hasAccount",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "150:0:0"
									},
									"src": "130:187:0",
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"name": "accounts",
									"nodeType": "VariableDeclaration",
									"scope": 118,
									"src": "325:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$6_storage_$",
										"typeString": "mapping(address => struct bank_m.User)"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$6_storage_$",
											"typeString": "mapping(address => struct bank_m.User)"
										},
										"valueType": {
											"contractScope": null,
											"id": 27,
											"name": "User",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 6,
											"src": "344:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$6_storage_ptr",
												"typeString": "struct bank_m.User"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 31,
									"name": "alice",
									"nodeType": "VariableDeclaration",
									"scope": 118,
									"src": "365:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_User_$6_storage",
										"typeString": "struct bank_m.User"
									},
									"typeName": {
										"contractScope": null,
										"id": 30,
										"name": "User",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 6,
										"src": "365:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_User_$6_storage_ptr",
											"typeString": "struct bank_m.User"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 33,
									"name": "bob",
									"nodeType": "VariableDeclaration",
									"scope": 118,
									"src": "382:8:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_User_$6_storage",
										"typeString": "struct bank_m.User"
									},
									"typeName": {
										"contractScope": null,
										"id": 32,
										"name": "User",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 6,
										"src": "382:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_User_$6_storage_ptr",
											"typeString": "struct bank_m.User"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "446:188:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 40,
															"name": "alice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "457:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$6_storage",
																"typeString": "struct bank_m.User storage ref"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "account",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "457:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 43,
														"name": "Alice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "473:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "457:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "457:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 46,
															"name": "alice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "489:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$6_storage",
																"typeString": "struct bank_m.User storage ref"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "489:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "505:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "489:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "489:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 52,
															"name": "bob",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "517:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$6_storage",
																"typeString": "struct bank_m.User storage ref"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "account",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "517:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 55,
														"name": "Bob",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "531:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "517:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "517:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 58,
															"name": "bob",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "545:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$6_storage",
																"typeString": "struct bank_m.User storage ref"
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "545:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "559:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "545:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "545:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 64,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "573:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$6_storage_$",
																"typeString": "mapping(address => struct bank_m.User storage ref)"
															}
														},
														"id": 66,
														"indexExpression": {
															"argumentTypes": null,
															"id": 65,
															"name": "Alice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "582:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "573:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$6_storage",
															"typeString": "struct bank_m.User storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 67,
														"name": "alice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "591:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$6_storage",
															"typeString": "struct bank_m.User storage ref"
														}
													},
													"src": "573:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$6_storage",
														"typeString": "struct bank_m.User storage ref"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "573:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 70,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "607:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$6_storage_$",
																"typeString": "mapping(address => struct bank_m.User storage ref)"
															}
														},
														"id": 72,
														"indexExpression": {
															"argumentTypes": null,
															"id": 71,
															"name": "Bob",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "616:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "607:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$6_storage",
															"typeString": "struct bank_m.User storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 73,
														"name": "bob",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "623:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$6_storage",
															"typeString": "struct bank_m.User storage ref"
														}
													},
													"src": "607:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$6_storage",
														"typeString": "struct bank_m.User storage ref"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "607:19:0"
											}
										]
									},
									"documentation": null,
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "Alice",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "411:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "Bob",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "426:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "410:28:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:0:0"
									},
									"scope": 118,
									"src": "399:235:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "685:60:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 82,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "696:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$6_storage_$",
																	"typeString": "mapping(address => struct bank_m.User storage ref)"
																}
															},
															"id": 85,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 83,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "705:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "705:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "696:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$6_storage",
																"typeString": "struct bank_m.User storage ref"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "696:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 87,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "728:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "728:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "696:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "696:41:0"
											}
										]
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 80,
											"modifierName": {
												"argumentTypes": null,
												"id": 79,
												"name": "hasAccount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 25,
												"src": "674:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "674:10:0"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "656:2:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "685:0:0"
									},
									"scope": 118,
									"src": "640:105:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "808:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 104,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "839:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "839:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 99,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "819:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "819:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "819:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "819:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "819:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "860:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$6_storage_$",
																	"typeString": "mapping(address => struct bank_m.User storage ref)"
																}
															},
															"id": 111,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 109,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "869:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "869:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "860:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$6_storage",
																"typeString": "struct bank_m.User storage ref"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "860:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 113,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "892:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "860:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "860:38:0"
											}
										]
									},
									"documentation": null,
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 97,
											"modifierName": {
												"argumentTypes": null,
												"id": 96,
												"name": "hasAccount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 25,
												"src": "797:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "797:10:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "769:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "769:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "768:13:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:0:0"
									},
									"scope": 118,
									"src": "751:155:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 119,
							"src": "27:882:0"
						}
					],
					"src": "0:909:0"
				},
				"id": 0
			}
		}
	}
}